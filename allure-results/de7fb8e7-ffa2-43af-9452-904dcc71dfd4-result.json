{"name":"Runs Cucumber Scenarios","status":"broken","statusDetails":{"known":false,"muted":false,"flaky":false,"message":"The step 'I am on the login page' and 4 other step(s) are undefined.\nYou can implement these steps using the snippet(s) below:\n\n@Given(\"I am on the login page\")\npublic void i_am_on_the_login_page() {\n    // Write code here that turns the phrase above into concrete actions\n    throw new io.cucumber.java.PendingException();\n}\n@When(\"I enter my username and password\")\npublic void i_enter_my_username_and_password() {\n    // Write code here that turns the phrase above into concrete actions\n    throw new io.cucumber.java.PendingException();\n}\n@When(\"I click the Login button\")\npublic void i_click_the_login_button() {\n    // Write code here that turns the phrase above into concrete actions\n    throw new io.cucumber.java.PendingException();\n}\n@Then(\"I should be taken to the Dashboard page\")\npublic void i_should_be_taken_to_the_dashboard_page() {\n    // Write code here that turns the phrase above into concrete actions\n    throw new io.cucumber.java.PendingException();\n}\n@Then(\"I should see the {string} menu\")\npublic void i_should_see_the_menu(String string) {\n    // Write code here that turns the phrase above into concrete actions\n    throw new io.cucumber.java.PendingException();\n}\n","trace":"io.cucumber.testng.UndefinedStepException: The step 'I am on the login page' and 4 other step(s) are undefined.\nYou can implement these steps using the snippet(s) below:\n\n@Given(\"I am on the login page\")\npublic void i_am_on_the_login_page() {\n    // Write code here that turns the phrase above into concrete actions\n    throw new io.cucumber.java.PendingException();\n}\n@When(\"I enter my username and password\")\npublic void i_enter_my_username_and_password() {\n    // Write code here that turns the phrase above into concrete actions\n    throw new io.cucumber.java.PendingException();\n}\n@When(\"I click the Login button\")\npublic void i_click_the_login_button() {\n    // Write code here that turns the phrase above into concrete actions\n    throw new io.cucumber.java.PendingException();\n}\n@Then(\"I should be taken to the Dashboard page\")\npublic void i_should_be_taken_to_the_dashboard_page() {\n    // Write code here that turns the phrase above into concrete actions\n    throw new io.cucumber.java.PendingException();\n}\n@Then(\"I should see the {string} menu\")\npublic void i_should_see_the_menu(String string) {\n    // Write code here that turns the phrase above into concrete actions\n    throw new io.cucumber.java.PendingException();\n}\n\n\tat io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)\n\tat io.cucumber.testng.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:23)\n\tat io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:133)\n\tat io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:136)\n\tat io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)\n\tat io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:136)\n\tat io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:129)\n\tat io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)\n\tat org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)\n\tat org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)\n\tat org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)\n\tat org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)\n\tat org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)\n\tat org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)\n\tat org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1597)\n\tat org.testng.TestRunner.privateRun(TestRunner.java:766)\n\tat org.testng.TestRunner.run(TestRunner.java:587)\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:384)\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:286)\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1109)\n\tat org.testng.TestNG.runSuites(TestNG.java:1039)\n\tat org.testng.TestNG.run(TestNG.java:1007)\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:65)\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)\n"},"stage":"finished","steps":[],"attachments":[],"parameters":[{"name":"arg1","value":"\"Login to Soniq Crew App\""},{"name":"arg0","value":"\"Successful login\""}],"start":1721133537832,"stop":1721133537886,"uuid":"de7fb8e7-ffa2-43af-9452-904dcc71dfd4","historyId":"36a67a928e0d4572b1d92ea30b4138e","fullName":"io.cucumber.testng.AbstractTestNGCucumberTests.runScenario","labels":[{"name":"package","value":"com.soniqapp.runner.RunCucumberTests"},{"name":"testClass","value":"com.soniqapp.runner.RunCucumberTests"},{"name":"testMethod","value":"runScenario"},{"name":"parentSuite","value":"Default Suite"},{"name":"suite","value":"Soniqmobileapp"},{"name":"subSuite","value":"com.soniqapp.runner.RunCucumberTests"},{"name":"host","value":"MacBook-Pro-cua-Nguyen.local"},{"name":"thread","value":"38729@MacBook-Pro-cua-Nguyen.local.main(1)"},{"name":"framework","value":"testng"},{"name":"language","value":"java"}],"links":[]}